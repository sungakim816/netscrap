@{
    ViewBag.Title = "Dashboard " + ViewBag.Sample;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string indexedUrlsCount = string.Empty;
    string urlQueueCount = string.Empty;
}
@Html.Partial("_DashboardNavBar")
@*Queue Count*@
<div class="container p-3">
    <div class="row">
        <div class="col-3 p-3 mb-3" style="max-width: initial; min-width:initial">
            <div class="bg-transparent text-white h2 text-center">
                <div class="card border-primary text-center bg-transparent rounded-input">
                    <div class="card-body">
                        <p class="font-weight-bold">Queue</p>
                        <div id="url-queue-count">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*Crawled Sites Count*@
        <div class="col-3 p-3 mb-3" style="max-width: initial; min-width:initial">
            <div class="bg-transparent text-white h2 text-center">
                <div class="card border-success text-center bg-transparent rounded-input">
                    <div class="card-body">
                        <p class="font-weight-bold">Indexed</p>
                        <div id="indexed-website-count">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*View for worker role status*@
    <div id="worker-role-status" class="container justify-content-md-center"></div>

    @*Modal for latest indexed sites*@
    <div class="container align-content-center">
        <div id="latest-indexed-website" class="text-white">
            <div class="text-center">
                <div class="spinner-grow text-success" style="width: 3rem; height: 3rem;" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @*Modal for error List*@
        <div class="col">
            <div id="error-list" class="text-white">
                <div class="text-center">
                    <div class="spinner-grow text-success" style="width: 3rem; height: 3rem;" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
        @*Modal for popular searches*@
        <div class="col">
            <div id="popular-search" class="text-white">
                <div class="text-center">
                    <div class="spinner-grow text-success" style="width: 3rem; height: 3rem;" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@**Modal for Command Notifications*@
<div class="modal fade" id="command-response" tabindex="-1" role="dialog" aria-labelledby="command" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="command-response-content">
            <div class="text-center bg-transparent">
                <div class="spinner-grow text-success" style="width: 5rem; height: 5rem;" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        @*Scripts for Real Time Update*@
        updateUrlQueueCount();
        updateIndexedWebsiteCount();

        updateWorkerStatus();

        updateErrorList();
        updatePopularSearch();

        updateLatestIndexedPage(10);
         @*End of Scripts for Real Time Update*@

        $('#error-list').on('click', 'a', function (e) {
            e.preventDefault();  //prevent action link normal functionality
            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#error-list').html(result);
                }
            });
            return false;
        });

        $('#popular-search').on('click', 'a', function (e) {
            e.preventDefault();  //prevent action link normal functionality
            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#popular-search').html(result);
                }
            });
            return false;
        });

        function copyLinkToClipBoard(id) {
            let url = document.getElementById(id);
            url.select();
            document.execCommand("copy");
        }

        function addSeedUrl() {
            var url = document.getElementById("url-input").value;
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#command-response-content").html(this.responseText);
                    $("#url-input").val("");
                }
            };
            xmlhttp.open('GET', '@Url.Action("AddSeedUrl", "Dashboard")' +'?url=' + url, true);
            xmlhttp.send();
        }

        function sendCommand(str) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#command-response-content").html(this.responseText);
                }
            };

            if (str == 'start') {
                xmlhttp.open('GET', '@Url.Action("StartCrawler", "Dashboard")', true);
            } else if (str == 'stop') {
                xmlhttp.open('GET', '@Url.Action("StopCrawler", "Dashboard")', true);
            }
            xmlhttp.send();
        }

        function clearUrlQueue() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#command-response-content").html(this.responseText);
                }
            };
            xmlhttp.open('POST', '@Url.Action("ClearUrlQueue", "Dashboard")', true);
            xmlhttp.send();
        }

        function clearIndexedUrls() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#command-response-content").html(this.responseText);
                }
            };
            xmlhttp.open('POST', '@Url.Action("ClearIndexedUrls", "Dashboard")', true);
            xmlhttp.send();
        }

        function clearAll() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    $("#command-response-content").html(this.responseText);
                }
            };
            xmlhttp.open('POST', '@Url.Action("ClearAll", "Dashboard")', true);
            xmlhttp.send();
        }

        function updateUrlQueueCount() {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#url-queue-count").html(this.responseText);
                        setTimeout(updateUrlQueueCount, 5000);
                    }
                };
            xmlhttp.open('POST', '@Url.Action("UrlQueueCount", "Dashboard")', true);
            xmlhttp.send();
        }

        function updateIndexedWebsiteCount() {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#indexed-website-count").html(this.responseText);
                        setTimeout(updateIndexedWebsiteCount, 5000);
                    }
                };
            xmlhttp.open('POST', '@Url.Action("IndexedWebsiteCount", "Dashboard")', true);
            xmlhttp.send();
        }

        function updateLatestIndexedPage(count) {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#latest-indexed-website").html(this.responseText);
                        setTimeout(updateLatestIndexedPage, 30000, 10);
                    }
                };
            xmlhttp.open('GET', '@Url.Action("ShowLatestIndexed", "Dashboard")' + "?count=" + count, true);
            xmlhttp.send();
        }

        function updateErrorList() {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#error-list").html(this.responseText);
                    }
                };
            xmlhttp.open('GET', '@Url.Action("ErrorList", "Dashboard")', true);
            xmlhttp.send();
        }

        function updatePopularSearch() {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#popular-search").html(this.responseText);
                    }
                };
                xmlhttp.open('GET', '@Url.Action("PopularSearch", "Dashboard")', true);
                xmlhttp.send();
        }

        function updateWorkerStatus() {
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#worker-role-status").html(this.responseText);
                        setTimeout(updateWorkerStatus, 5000);
                    }
                };
                xmlhttp.open('GET', '@Url.Action("WorkerStatus", "Dashboard")', true);
                xmlhttp.send();
        }

        function updateCrawledDomain() {
               var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#crawled-domain").html(this.responseText);
                    }
                };
                xmlhttp.open('GET', '@Url.Action("CrawledDomain", "Dashboard")', true);
                xmlhttp.send();
        }


    </script>
}
